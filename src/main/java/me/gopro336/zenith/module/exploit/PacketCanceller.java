package me.gopro336.zenith.module.exploit;

import java.util.ArrayList;
import me.gopro336.zenith.event.PacketEvent;
import me.gopro336.zenith.module.Category;
import me.gopro336.zenith.module.Module;
import me.gopro336.zenith.setting.Setting;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.client.CPacketInput;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerAbilities;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.network.play.client.CPacketUseEntity;
import net.minecraft.network.play.client.CPacketVehicleMove;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public final class PacketCanceller
extends Module {
    private final Setting CancelCPacketInput = new Setting("Input", (Module)this, false);
    private final Setting CancelPosition = new Setting("Position", (Module)this, false);
    private final Setting CancelPositionRotation = new Setting("PositionRotation", (Module)this, false);
    private final Setting CancelRotation = new Setting("Rotation", (Module)this, false);
    private final Setting CancelCPacketPlayerAbilities = new Setting("PlayerAbilities", (Module)this, false);
    private final Setting CancelCPacketPlayerDigging = new Setting("PlayerDigging", (Module)this, false);
    private final Setting CancelCPacketPlayerTryUseItem = new Setting("PlayerTryUseItem", (Module)this, false);
    private final Setting CancelCPacketPlayerTryUseItemOnBlock = new Setting("PlayerTryUseItemOnBlock", (Module)this, false);
    private final Setting CancelCPacketEntityAction = new Setting("EntityAction", (Module)this, false);
    private final Setting CancelCPacketUseEntity = new Setting("UseEntity", (Module)this, false);
    private final Setting CancelCPacketVehicleMove = new Setting("VehicleMove", (Module)this, false);
    private int PacketsCanelled = 0;
    private ArrayList<Packet> PacketsToIgnore = new ArrayList();

    public PacketCanceller(String name, String description, Category category) {
        super(name, description, category);
        this.addSetting(this.CancelCPacketInput);
        this.addSetting(this.CancelPosition);
        this.addSetting(this.CancelPositionRotation);
        this.addSetting(this.CancelRotation);
        this.addSetting(this.CancelCPacketPlayerAbilities);
        this.addSetting(this.CancelCPacketPlayerDigging);
        this.addSetting(this.CancelCPacketPlayerTryUseItem);
        this.addSetting(this.CancelCPacketPlayerTryUseItemOnBlock);
        this.addSetting(this.CancelCPacketEntityAction);
        this.addSetting(this.CancelCPacketUseEntity);
        this.addSetting(this.CancelCPacketVehicleMove);
    }

    @Override
    public void onDisable() {
        super.onDisable();
        this.PacketsCanelled = 0;
    }

    @SubscribeEvent
    public void onPacketSend(PacketEvent.Send event) {
        if (event.getPacket() instanceof CPacketInput && this.CancelCPacketInput.getBooleanValue() || event.getPacket() instanceof CPacketPlayer.Position && this.CancelPosition.getBooleanValue() || event.getPacket() instanceof CPacketPlayer.PositionRotation && this.CancelPositionRotation.getBooleanValue() || event.getPacket() instanceof CPacketPlayer.Rotation && this.CancelRotation.getBooleanValue() || event.getPacket() instanceof CPacketPlayerAbilities && this.CancelCPacketPlayerAbilities.getBooleanValue() || event.getPacket() instanceof CPacketPlayerDigging && this.CancelCPacketPlayerDigging.getBooleanValue() || event.getPacket() instanceof CPacketPlayerTryUseItem && this.CancelCPacketPlayerTryUseItem.getBooleanValue() || event.getPacket() instanceof CPacketPlayerTryUseItemOnBlock && this.CancelCPacketPlayerTryUseItemOnBlock.getBooleanValue() || event.getPacket() instanceof CPacketEntityAction && this.CancelCPacketEntityAction.getBooleanValue() || event.getPacket() instanceof CPacketUseEntity && this.CancelCPacketUseEntity.getBooleanValue() || event.getPacket() instanceof CPacketVehicleMove && this.CancelCPacketVehicleMove.getBooleanValue()) {
            if (this.PacketsToIgnore.contains(event.getPacket())) {
                this.PacketsToIgnore.remove(event.getPacket());
                return;
            }
            ++this.PacketsCanelled;
            event.setCanceled(true);
            return;
        }
    }

    public void AddIgnorePacket(Packet p_Packet) {
        this.PacketsToIgnore.add(p_Packet);
    }
}
